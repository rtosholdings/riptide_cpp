# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Native Sanity Checks

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-cmake-windows:

    runs-on: ${{ matrix.os }}
    env:
      working-directory: ./
    strategy:
      matrix:
        os: [windows-2019]
        python-version: [3.8, 3.9,'3.10']

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
        # Set fetch-depth to 0 so all history is retrieved; this is needed so we get the git tags
        # which we use for setting the package version (via setuptools-scm).
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install numpy==1.21
      working-directory: ${{ env.working-directory }}
    - name: Create Cmake build directory
      run: |
        cmake -E make_directory "build"
      working-directory: ${{ env.working-directory }}
    - name: Setup CMake Relase configuration
      run: |
        cmake -E chdir "build" cmake -DBENCHMARK_ENABLE_GTEST_TESTS=OFF -DCMAKE_BUILD_TYPE=Release "-DRIPTIDE_PYTHON_VER=${{ matrix.python-version }}" ../
      working-directory: ${{ env.working-directory }}
    - name: Setup CMake Debug configuration
      run: |
        cmake -E chdir "build" cmake -DBENCHMARK_ENABLE_GTEST_TESTS=OFF -DCMAKE_BUILD_TYPE=Debug "-DRIPTIDE_PYTHON_VER=${{ matrix.python-version }}" ../
    - name: Build Release via CMake
      run: |
        cmake --build "build" --config Release
      working-directory: ${{ env.working-directory }}
    - name: Build Debug via CMake
      run: |
        cmake --build "build" --config Debug
      working-directory: ${{ env.working-directory }}
    - name: Run the tests and benchmarks
      run: |
        cmake -E chdir "build/bench/riptide_bench/riptide_bench/Release" riptide_bench
        cmake -E chdir "build/test/riptide_test/Release" riptide_test
        cmake -E chdir "build/test/riptide_python_test/Release" riptide_python_test
      working-directory: ${{ env.working-directory }}

  build-cmake-ubuntu-120:

    runs-on: ${{ matrix.os }}
    env:
      working-directory: ./
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
        # Set fetch-depth to 0 so all history is retrieved; this is needed so we get the git tags
        # which we use for setting the package version (via setuptools-scm).
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install numpy==1.20
      working-directory: ${{ env.working-directory }}
    - name: Create Cmake build directory
      run: |
        cmake -E make_directory "build"
      working-directory: ${{ env.working-directory }}
    - name: Setup CMake Relase configuration
      run: |
        cmake -E chdir "build" cmake -DBENCHMARK_ENABLE_GTEST_TESTS=OFF -DCMAKE_BUILD_TYPE=Release "-DRIPTIDE_PYTHON_VER=${{ matrix.python-version }}" ../
      working-directory: ${{ env.working-directory }}
    - name: Build Release via CMake
      run: |
        cmake --build "build" --config Release
      working-directory: ${{ env.working-directory }}
    - name: Run the Release tests and benchmarks
      run: |
        build/bench/riptide_bench/riptide_bench/riptide_bench
        build/test/riptide_test/riptide_test
        build/test/riptide_python_test/riptide_python_test
      working-directory: ${{ env.working-directory }}

  build-cmake-ubuntu-121:

    runs-on: ${{ matrix.os }}
    env:
      working-directory: ./
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.10']

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
        # Set fetch-depth to 0 so all history is retrieved; this is needed so we get the git tags
        # which we use for setting the package version (via setuptools-scm).
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install numpy==1.21
      working-directory: ${{ env.working-directory }}
    - name: Create Cmake build directory
      run: |
        cmake -E make_directory "build"
      working-directory: ${{ env.working-directory }}
    - name: Setup CMake Relase configuration
      run: |
        cmake -E chdir "build" cmake -DCMAKE_BUILD_TYPE=Release "-DRIPTIDE_PYTHON_VER=${{ matrix.python-version }}" ../
      working-directory: ${{ env.working-directory }}
    - name: Build Release via CMake
      run: |
        cmake --build "build" --config Release
      working-directory: ${{ env.working-directory }}
    - name: Run the Release tests and benchmarks
      run: |
        build/bench/riptide_bench/riptide_bench/riptide_bench
        build/test/riptide_test/riptide_test
        build/test/riptide_python_test/riptide_python_test
      working-directory: ${{ env.working-directory }}
